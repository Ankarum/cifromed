# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-11-26 06:16
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import ehr.items.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_id', models.IntegerField(blank=True, default=0)),
                ('city_name', models.CharField(blank=True, default='', max_length=40)),
            ],
            options={
                'verbose_name': 'город',
                'verbose_name_plural': 'города',
            },
        ),
        migrations.CreateModel(
            name='Desease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=550, null=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, max_length=550, null=True, verbose_name='Описание заболевания')),
            ],
            options={
                'verbose_name': 'патология',
                'verbose_name_plural': 'патологии',
            },
        ),
        migrations.CreateModel(
            name='EHR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blood_type', models.CharField(blank=True, choices=[('I', 'I'), ('II', 'II'), ('III', 'III'), ('IV', 'IV')], max_length=5, null=True, verbose_name='Группа крови')),
                ('rh_factor', models.CharField(blank=True, choices=[('(-)', 'Отрицательный'), ('(+)', 'Положительный')], max_length=5, null=True, verbose_name='Резус-фактор')),
                ('contraindications', models.TextField(blank=True, max_length=550, null=True, verbose_name='Противопоказания')),
                ('anamnesis', models.TextField(blank=True, max_length=550, null=True, verbose_name='Анамнез')),
                ('address', models.TextField(blank=True, max_length=550, null=True, verbose_name='Адрес проживания')),
            ],
            options={
                'verbose_name': 'ЭМК',
                'verbose_name_plural': 'ЭМК',
            },
        ),
        migrations.CreateModel(
            name='MedFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=550, null=True, verbose_name='Заголовок')),
                ('avatar', ehr.items.fields.ThumbnailImageField(blank=True, null=True, storage=ehr.items.fields.MyFileSystemStorage(), upload_to='procedures/')),
                ('description', models.CharField(blank=True, max_length=550, null=True, verbose_name='Расшифровка')),
            ],
        ),
        migrations.CreateModel(
            name='MedService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=550, null=True, verbose_name='Название услуги')),
                ('code', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Код услуги')),
                ('files', models.ManyToManyField(blank=True, to='ehr.MedFile', verbose_name='Изображения')),
            ],
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('head_circumference', models.FloatField(blank=True, null=True, verbose_name='Окружность головы')),
                ('chest_circumference', models.FloatField(blank=True, null=True, verbose_name='Окружность груди')),
                ('waist_circumference', models.FloatField(blank=True, null=True, verbose_name='Окружность талии')),
                ('height', models.FloatField(blank=True, null=True, verbose_name='Рост')),
                ('weight', models.FloatField(blank=True, null=True, verbose_name='Вес')),
                ('body_mass_index', models.FloatField(blank=True, null=True, verbose_name='Индекс массы тела')),
            ],
            options={
                'verbose_name': 'метрика',
                'verbose_name_plural': 'метрики',
            },
        ),
        migrations.CreateModel(
            name='Procedure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_start', models.DateTimeField(blank=True, null=True, verbose_name='Дата и время начала процедуры')),
                ('timestamp_end', models.DateTimeField(blank=True, null=True, verbose_name='Дата и время конца процедуры')),
                ('services', models.ManyToManyField(blank=True, to='ehr.MedService', verbose_name='Медицинская услуга')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('middle_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Отчество')),
                ('birthday', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('avatar', ehr.items.fields.ThumbnailImageField(blank=True, null=True, storage=ehr.items.fields.MyFileSystemStorage(), upload_to='avatars/')),
                ('sex', models.CharField(blank=True, choices=[('Муж.', 'Мужчина'), ('Жен.', 'Женщина')], max_length=10, null=True, verbose_name='Пол')),
                ('is_activate', models.BooleanField(default=True)),
                ('activation_url', models.CharField(blank=True, default='', max_length=150)),
                ('postcode', models.CharField(blank=True, default='', max_length=15, verbose_name='Индекс')),
                ('region', models.CharField(blank=True, default='', max_length=50, verbose_name='Регион')),
                ('street', models.CharField(blank=True, default='', max_length=50, verbose_name='Улица')),
                ('housing', models.CharField(blank=True, default='', max_length=50, verbose_name='Корпус')),
                ('structure', models.CharField(blank=True, default='', max_length=50, verbose_name='Строение')),
                ('house', models.CharField(blank=True, default='', max_length=50, verbose_name='Дом')),
                ('apartment', models.CharField(blank=True, default='', max_length=50, verbose_name='Квартира')),
                ('mobile_phone', models.CharField(blank=True, default='', max_length=50, verbose_name='Мобильный телефон')),
                ('home_phone', models.CharField(blank=True, default='', max_length=50, verbose_name='Домашний телефон')),
                ('user_type', models.IntegerField(choices=[(0, 'Пользователь'), (1, 'Врач'), (2, 'Администратор')], default=0, verbose_name='Тип пользователя')),
                ('company', models.CharField(blank=True, default='', max_length=100, verbose_name='Место работы')),
                ('profession', models.CharField(blank=True, default='', max_length=100, verbose_name='Профессия')),
                ('position', models.CharField(blank=True, default='', max_length=100, verbose_name='Должность')),
                ('insurance_policy', models.CharField(blank=True, default='', max_length=40, verbose_name='Страховой полис')),
                ('SNILS', models.CharField(blank=True, default='', max_length=40, verbose_name='СНИЛС')),
                ('telegram_id', models.CharField(blank=True, default='', max_length=40, verbose_name='id телеграма')),
                ('telegram_username', models.CharField(blank=True, default='', max_length=40, verbose_name='Никнейм телеграма')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ehr.City', verbose_name='Город')),
                ('doctors', models.ManyToManyField(blank=True, related_name='digitmed_user_doctors', to='ehr.Profile', verbose_name='Доктора')),
                ('ehr', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ehr.EHR', verbose_name='ЭМК')),
                ('metric', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ehr.Metric', verbose_name='Метрики')),
                ('patients', models.ManyToManyField(blank=True, related_name='digitmed_user_patients', to='ehr.Profile', verbose_name='Пациенты')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'профиль',
                'verbose_name_plural': 'профили',
            },
        ),
        migrations.CreateModel(
            name='Research',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_start', models.DateTimeField(null=True, verbose_name='Дата и время начала обследования')),
                ('timestamp_end', models.DateTimeField(blank=True, null=True, verbose_name='Дата и время конца обследования')),
                ('complaints', models.TextField(blank=True, null=True, verbose_name='Жалобы пациента')),
                ('symptoms', models.TextField(blank=True, null=True, verbose_name='Симптомы')),
                ('diagnose', models.TextField(blank=True, null=True, verbose_name='Диагноз')),
                ('notes', models.CharField(blank=True, max_length=550, null=True, verbose_name='Заметки врача')),
                ('doctors', models.ManyToManyField(blank=True, to='ehr.Profile')),
                ('procedures', models.ManyToManyField(blank=True, to='ehr.Procedure', verbose_name='Услуги')),
            ],
            options={
                'verbose_name': 'Исследование',
                'verbose_name_plural': 'Исследования',
            },
        ),
        migrations.CreateModel(
            name='Scheduler',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(blank=True, null=True, verbose_name='Начало приёма')),
                ('end', models.DateTimeField(blank=True, null=True, verbose_name='Окончание приёма')),
                ('cabinet_number', models.CharField(blank=True, max_length=550, null=True, verbose_name='Номер кабинета')),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='digitmed_schedule_doctor', to='ehr.Profile', verbose_name='Врач')),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='digitmed_schedule_patient', to='ehr.Profile', verbose_name='Пациент')),
            ],
        ),
        migrations.CreateModel(
            name='Symptom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=550, null=True, verbose_name='Название')),
                ('eng_title', models.CharField(blank=True, max_length=550, null=True, verbose_name='Название на англ')),
            ],
            options={
                'verbose_name': 'симптом',
                'verbose_name_plural': 'симптомы',
            },
        ),
        migrations.CreateModel(
            name='Vaccination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_start', models.DateTimeField(null=True, verbose_name='Дата и время прививки')),
                ('dose', models.CharField(blank=True, max_length=550, null=True, verbose_name='Доза')),
                ('series', models.CharField(blank=True, max_length=550, null=True, verbose_name='Серия')),
                ('drug_name', models.CharField(blank=True, max_length=550, null=True, verbose_name='Наименования препарата')),
                ('reaction', models.TextField(blank=True, null=True, verbose_name='Реакция')),
            ],
            options={
                'verbose_name': 'прививка',
                'verbose_name_plural': 'прививки',
            },
        ),
        migrations.AddField(
            model_name='ehr',
            name='researchers',
            field=models.ManyToManyField(blank=True, to='ehr.Research', verbose_name='Исследования'),
        ),
        migrations.AddField(
            model_name='ehr',
            name='vaccinations',
            field=models.ManyToManyField(blank=True, to='ehr.Vaccination', verbose_name='Вакцинация'),
        ),
        migrations.AddField(
            model_name='desease',
            name='symptoms',
            field=models.ManyToManyField(blank=True, to='ehr.Symptom', verbose_name='Симптомы'),
        ),
    ]
